
Ресурсы/Плагины:

Axios - запросы к бекэнду
React State, Redux или MobX - библиотеки для хранения состояния сайта
i18n - система локализации
netlify.com - деплой фронтэнда, есть бесплатный, можно привязать github проект
render.com - деплой бэкэнда

------------------------------------------------------------

Итак, что нужно сделать?

Страницы:
- Главная страница (возможно не нужна)
- Страница со списком товаров (с пагинацией)
  - Пагинация
  - Поиск
  - Фильтрация
  - Сортировка
- Страница товара
  - Фотографии
  - Детальное описание, параметры
- Конструктор товара
- Корзина / Заказ
  - Ввод контактной информации если пользователь не залогинен
- Личный кабинет
  - логин-пароль
  - контактные данные пользователя для связи

------------------------------------------------------------

Данные товара:
- название
- краткое описание
- полнное описание
- параметры
- фотографии (список)

Конструктор двери:
- Высота
- Ширина
- Материал рамы
- Материал двери
- Конструкция двери (стекляння, цельная, с окошками, многослойная)

Данные пользователя для обработки:
- Имя Фамилия
- Телефон
- E-mail
- Информация о заказе

------------------------------------------------------------

Информация о товарах хранится в гугл-таблице.
Информация о заказах скидывается в гугл таблицу, плюс добавочно можно кидать сообщение в телеграм/вайбер что бы оповещать хозяев сайта.


О работе с гугл-таблицами:
В них можно реализовать вебхуки, таким образом изменения в таблице будут динамически обновлять сайт.
Кроме того таким образом можно оповещать пользователя об изменении в статусе его заказа.

https://medium.com/@eyalgershon/sending-a-webhook-for-new-or-updated-rows-in-google-sheets-e0c9d6a8cb45




------------------------------------------------------------



Тестовая гугл таблица для проверки:

Страница Settings:
https://docs.google.com/spreadsheets/d/e/2PACX-1vSxm8NuQzmcx1VnbQjCRBwGpePaZf57WZJ8UvkwP9fQdT4ua9VeWbl8tu0voR_L4WV2Etkj7jAlc-VW/pub?gid=0&single=true&output=csv

Страница Products:
https://docs.google.com/spreadsheets/d/e/2PACX-1vSxm8NuQzmcx1VnbQjCRBwGpePaZf57WZJ8UvkwP9fQdT4ua9VeWbl8tu0voR_L4WV2Etkj7jAlc-VW/pub?gid=1431473448&single=true&output=csv

Файл таблицы: 2PACX-1vSxm8NuQzmcx1VnbQjCRBwGpePaZf57WZJ8UvkwP9fQdT4ua9VeWbl8tu0voR_L4WV2Etkj7jAlc-VW
Страница Settings: 0
Страница Products: 1431473448












            <FormControl sx={{ m: 2, width: 245 }}>
              <InputLabel>Categories</InputLabel>
              <Select
                labelId="demo-multiple-chip-label"
                id="demo-multiple-chip"
                multiple
                size="small"
                value={selectedNames}
                onChange={handleChange}
                input={
                  <OutlinedInput id="select-multiple-chip" label="Categories" />
                }
                renderValue={(selected) => (
                  <Box sx={{ display: "flex", flexWrap: "wrap", gap: 0.5 }}>
                    {selected.map((value) => (
                      <Chip key={value} label={value} />
                    ))}
                  </Box>
                )}
              >
                {names.map((name) => (
                  <MenuItem key={name} value={name}>
                    {name}
                  </MenuItem>
                ))}
              </Select>
            </FormControl>

            <FormControl sx={{ m: 2, width: 245 }}>
              <InputLabel>Categories</InputLabel>
              <Select
                multiple
                value={selectedNames}
                onChange={(e) => setSelectedNames(e.target.value)}
                input={<OutlinedInput label="Categories" />}
                size="small"
              >
                {names.map((name) => (
                  <MenuItem key={name} value={name}>
                    {name}
                  </MenuItem>
                ))}
              </Select>
            </FormControl>

            <FormControl sx={{ m: 2, width: 245 }}>
              <InputLabel>Categories</InputLabel>
              <Select
                labelId="demo-multiple-chip-label"
                id="demo-multiple-chip"
                multiple
                size="small"
                value={selectedNames}
                onChange={handleChange}
                input={
                  <OutlinedInput id="select-multiple-chip" label="Categories" />
                }
                renderValue={(selected) => (
                  <Box sx={{ display: "flex", flexWrap: "wrap", gap: 0.5 }}>
                    {selected.map((value) => (
                      <Chip key={value} label={value} />
                    ))}
                  </Box>
                )}
              >
                {names.map((name) => (
                  <MenuItem key={name} value={name}>
                    {name}
                  </MenuItem>
                ))}
              </Select>
            </FormControl>



            